name: Deploy

on:
  push:
    tags:
      - v*
env:
  IMAGE_NAME: core-website
  REGISTRY: ${{ secrets.PRODUCTION_REGISTRY }}
  SERVICE_NAME: ${{ secrets.SERVICE_NAME }}

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: Pull packages image
        if: github.ref != 'refs/heads/main'
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          docker pull $IMAGE_ID:$VERSION
  productionize:
    runs-on: ubuntu-latest
    needs: verify
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive
          ref: "${{ github.ref }}"
      - name: Build production container
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          docker build . --tag $IMAGE_NAME:production
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DOCTL_TOKEN }}
      - name: Publish
        run: |
          doctl registry login
          docker tag $IMAGE_NAME:production $REGISTRY/$SERVICE_NAME-$IMAGE_NAME:production-$VERSION
          docker push $REGISTRY/$SERVICE_NAME-$IMAGE_NAME:production-$VERSION
